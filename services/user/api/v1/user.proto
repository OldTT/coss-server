syntax = "proto3";
package v1;
option go_package = "github.com/cossim/coss-server/services/user/api/v1";

message UserLoginRequest {
  // @inject_tag: json:"email"
  string Email=1;
  // @inject_tag: json:"password"
  string Password=2;
}

message UserLoginResponse {
  // @inject_tag: json:"user_id"
  string UserId=1;
  // @inject_tag: json:"nick_name"
  string NickName=2;
  // @inject_tag: json:"email"
  string Email=3;
  // @inject_tag: json:"tel"
  string Tel=4;
  // @inject_tag: json:"avatar"
  string Avatar=5;
}

message UserRegisterRequest {
  // @inject_tag: json:"email"
  string Email=1;
  // @inject_tag: json:"nick_name"
  string NickName=2;
  // @inject_tag: json:"password"
  string Password=3;
  // @inject_tag: json:"confirm_password"
  string ConfirmPassword=4;
  // @inject_tag: json:"avatar"
  string Avatar=5;
}

message UserRegisterResponse {
  // @inject_tag: json:"user_id"
  string UserId=1;
}

message UserInfoRequest {
  // @inject_tag: json:"user_id"
  string UserId=1;
}

// 定义用户状态枚举类型
enum UserStatus {
  USER_STATUS_UNKNOWN = 0;
  USER_STATUS_NORMAL = 1;
  USER_STATUS_DISABLE = 2;
  USER_STATUS_DELETED = 3;
  USER_STATUS_LOCK = 4;
}

message UserInfoResponse {
  // @inject_tag: json:"user_id"
  string UserId=1;
  // @inject_tag: json:"nick_name"
  string NickName=2;
  // @inject_tag: json:"email"
  string Email=3;
  // @inject_tag: json:"tel"
  string Tel=4;
  // @inject_tag: json:"avatar"
  string Avatar=5;
  // @inject_tag: json:"signature"
  string Signature=6;
  // @inject_tag: json:"status"
  UserStatus Status = 7;
}

message GetBatchUserInfoRequest {
  repeated string UserIds = 1;
}
message GetUserInfoByEmailRequest {
  // @inject_tag: json:"email"
  string Email = 1;
}


message GetBatchUserInfoResponse {
  // @inject_tag: json:"users" form:"users"
  repeated UserInfoResponse Users = 1;
}

service UserService {
  rpc UserLogin(UserLoginRequest) returns(UserLoginResponse);
  rpc UserRegister(UserRegisterRequest) returns(UserRegisterResponse);
  rpc UserInfo(UserInfoRequest) returns(UserInfoResponse);
  rpc GetBatchUserInfo(GetBatchUserInfoRequest) returns (GetBatchUserInfoResponse);
  rpc GetUserInfoByEmail(GetUserInfoByEmailRequest) returns (UserInfoResponse);
  //  rpc UserLogout(UserRequest) returns(UserCommonResponse);
}