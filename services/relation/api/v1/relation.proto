syntax = "proto3";
package v1;
option go_package = "github.com/cossim/coss-server/services/relation/api/v1";

message AddFriendRequest {
  // @inject_tag: json:"user_id" form:"user_id"
  string UserId = 1;
  // @inject_tag: json:"friend_id" form:"friend_id"
  string FriendId = 2;
}

message AddFriendResponse {
  // Add any necessary fields here for the response
}

message ConfirmFriendRequest {
  // @inject_tag: json:"user_id" form:"user_id"
  string UserId = 1;
  // @inject_tag: json:"friend_id" form:"friend_id"
  string FriendId = 2;
}

message ConfirmFriendResponse {
  // Add any necessary fields here for the response
}

message DeleteFriendRequest {
  // @inject_tag: json:"user_id" form:"user_id"
  string UserId = 1;
  // @inject_tag: json:"friend_id" form:"friend_id"
  string FriendId = 2;
}

message DeleteFriendResponse {
  // Add any necessary fields here for the response
}

message AddBlacklistRequest {
  // @inject_tag: json:"user_id" form:"user_id"
  string UserId = 1;
  // @inject_tag: json:"friend_id" form:"friend_id"
  string FriendId = 2;
}

message AddBlacklistResponse {
  // Add any necessary fields here for the response
}

message DeleteBlacklistRequest {
  // @inject_tag: json:"user_id" form:"user_id"
  string UserId = 1;
  // @inject_tag: json:"friend_id" form:"friend_id"
  string FriendId = 2;
}

message DeleteBlacklistResponse {
  // Add any necessary fields here for the response
}

message Friend {
  // @inject_tag: json:"user_id" form:"user_id"
  string UserId = 1;
}

message GetFriendListRequest {
  // @inject_tag: json:"user_id" form:"user_id"
  string UserId = 1;
}

message GetFriendListResponse {
  // @inject_tag: json:"friend_list" form:"friend_list"
  repeated Friend FriendList = 1;
}

message Blacklist {
  // @inject_tag: json:"user_id" form:"user_id"
  string UserId = 1;
}

message GetBlacklistRequest {
  // @inject_tag: json:"user_id" form:"user_id"
  string UserId = 1;
}

message GetBlacklistResponse {
  // @inject_tag: json:"blacklist" form:"blacklist"
  repeated Blacklist Blacklist = 1;
}

service RelationService {
  rpc AddFriend(AddFriendRequest) returns (AddFriendResponse);
  rpc ConfirmFriend(ConfirmFriendRequest) returns (ConfirmFriendResponse);
  rpc DeleteFriend(DeleteFriendRequest) returns (DeleteFriendResponse);
  rpc AddBlacklist(AddBlacklistRequest) returns (AddBlacklistResponse);
  rpc DeleteBlacklist(DeleteBlacklistRequest) returns (DeleteBlacklistResponse);
  rpc GetFriendList(GetFriendListRequest) returns (GetFriendListResponse);
  rpc GetBlacklist(GetBlacklistRequest) returns (GetBlacklistResponse);
}