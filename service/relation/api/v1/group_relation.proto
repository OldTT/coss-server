syntax = "proto3";
package v1;
option go_package = "github.com/cossim/coss-server/service/relation/api/v1";

message UserGroupRequest {
  // @inject_tag: json:"user_id"
  string UserId = 1;
  // @inject_tag: json:"group_id"
  uint32 GroupId = 2;
  // @inject_tag: json:"relation_status"
  uint32 RelationStatus = 4;
}

message UserGroupResponse {
}

message GroupID {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;
}

message UserIDs {
  // @inject_tag: json:"user_ids"
  repeated string UserIds = 1;
}


message JoinGroupRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1; // 群聊id
  // @inject_tag: json:"user_id"
  string UserId = 2;  // 用户id
  // @inject_tag: json:"msg"
  string Msg = 3; // 申请信息
}

message JoinGroupResponse {

}

message ApproveJoinGroupRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;     // 群聊id
  // @inject_tag: json:"user_id"
  string UserId = 2;  // 用户id
}

message ApproveJoinGroupResponse {
}

message RejectJoinGroupRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;     // 群聊id
  // @inject_tag: json:"user_id"
  string UserId = 2;     // 拒绝的用户id
}

message RejectJoinGroupResponse {
}

message RemoveFromGroupRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;     // 群聊id
  // @inject_tag: json:"user_id"
  string UserId = 2;     // 移除的用户id
}

message RemoveFromGroupResponse {
}

message LeaveGroupRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;   // 群聊id
  // @inject_tag: json:"user_id"
  string UserId = 2;    // 拒绝的用户id
}

message LeaveGroupResponse {
}

message GetGroupJoinRequestListRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;
}

message GroupJoinRequestListResponse {
  repeated GroupJoinRequestList GroupJoinRequestList = 1;
}

message GroupJoinRequestList {
  // @inject_tag: json:"user_id"
  string UserId = 1;    // 用户id
  // @inject_tag: json:"msg"
  string Msg = 2;       // 申请信息
}

message GetGroupRelationRequest {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1;     // 群聊id
  // @inject_tag: json:"user_id"
  string UserId = 2;     // 用户id
}

message GetGroupRelationResponse {
  // @inject_tag: json:"group_id"
  uint32 GroupId = 1; // 群聊ID
  // @inject_tag: json:"user_id"
  string UserId = 2;  // 用户ID
  // @inject_tag: json:"status"
  GroupRelationStatus Status = 3;
  // @inject_tag: json:"identity"
  GroupIdentity Identity = 4;  // 群聊身份
  // @inject_tag: json:"join_method"
  uint32 JoinMethod = 5;
  // @inject_tag: json:"join_time"
  int64 JoinTime = 6;
  int64 MuteEndTime = 7;
}

message Empty {
}


// 添加 GroupIdentity 枚举定义
enum GroupIdentity {
  IDENTITY_USER = 0;  // 普通用户
  IDENTITY_ADMIN = 1; // 管理员
  IDENTITY_OWNER = 2;
}
enum GroupRelationStatus {
    GroupStatusApplying  = 0; // 申请中
    GroupStatusJoined    = 1; // 已加入
    GroupStatusReject    = 2; // 被拒绝
    GroupStatusBlocked   = 3; // 被封禁
}

service GroupRelationService {
  rpc JoinGroup (JoinGroupRequest) returns (JoinGroupResponse);
  rpc GetUserGroupIDs(GroupID) returns (UserIDs);
  rpc ApproveJoinGroup (ApproveJoinGroupRequest) returns (ApproveJoinGroupResponse);
  rpc RejectJoinGroup (RejectJoinGroupRequest) returns (RejectJoinGroupResponse);
  rpc RemoveFromGroup (RemoveFromGroupRequest) returns (RemoveFromGroupResponse);
  rpc LeaveGroup (LeaveGroupRequest) returns (LeaveGroupResponse);
  rpc GetGroupJoinRequestList (GetGroupJoinRequestListRequest) returns (GroupJoinRequestListResponse);
  rpc GetGroupRelation (GetGroupRelationRequest) returns (GetGroupRelationResponse);
  rpc DeleteGroupRelationByGroupId (GroupID) returns (Empty);
}

